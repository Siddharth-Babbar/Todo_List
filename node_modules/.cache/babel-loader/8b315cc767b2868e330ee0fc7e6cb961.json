{"ast":null,"code":"import _slicedToArray from\"C:/Users/siddh/Desktop/todo-list-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export var Todo=function Todo(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEditing=_useState2[0],setIsEditing=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),newName=_useState4[0],setNewName=_useState4[1];var handleChange=function handleChange(e){setNewName(e.target.value);};var handleSubmit=function handleSubmit(e){e.preventDefault();props.editTask(props.id,newName);setNewName(\"\");setIsEditing(false);};// const edit = () => {};\nvar editTemplate=/*#__PURE__*/_jsxs(\"form\",{action:\"#\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:props.id,children:[\"New name for \",props.name]}),/*#__PURE__*/_jsx(\"input\",{id:props.id,type:\"text\",onChange:handleChange,value:newName})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){setIsEditing(false);},children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Save\"})]})]});var viewTemplate=/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkBox\",id:\"status\",defaultChecked:props.completed,onChange:function onChange(){props.toggleTaskComplete(props.id);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"status\",children:props.name})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{id:\"edit\",onClick:function onClick(){setIsEditing(true);},children:\"Edit Task\"}),/*#__PURE__*/_jsx(\"button\",{id:\"remove\",onClick:function onClick(){props.deleteTask(props.id);},children:\"Remove Task\"})]})]});return/*#__PURE__*/_jsx(\"li\",{children:isEditing?editTemplate:viewTemplate});};","map":{"version":3,"sources":["C:/Users/siddh/Desktop/todo-list-forked/src/Todo.jsx"],"names":["useState","Todo","props","isEditing","setIsEditing","newName","setNewName","handleChange","e","target","value","handleSubmit","preventDefault","editTask","id","editTemplate","name","viewTemplate","completed","toggleTaskComplete","deleteTask"],"mappings":"iKAAA,OAASA,QAAT,KAAyB,OAAzB,C,wFAEA,MAAO,IAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAW,CAC7B,cAAkCF,QAAQ,CAAC,KAAD,CAA1C,wCAAOG,SAAP,eAAkBC,YAAlB,eACA,eAA8BJ,QAAQ,CAAC,EAAD,CAAtC,yCAAOK,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BF,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV,CACD,CAFD,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACH,CAAD,CAAO,CAC1BA,CAAC,CAACI,cAAF,GACAV,KAAK,CAACW,QAAN,CAAeX,KAAK,CAACY,EAArB,CAAyBT,OAAzB,EACAC,UAAU,CAAC,EAAD,CAAV,CACAF,YAAY,CAAC,KAAD,CAAZ,CACD,CALD,CAOA;AACA,GAAMW,CAAAA,YAAY,cAChB,cAAM,MAAM,CAAC,GAAb,CAAiB,QAAQ,CAAEJ,YAA3B,wBACE,oCACE,eAAO,OAAO,CAAET,KAAK,CAACY,EAAtB,2BAAwCZ,KAAK,CAACc,IAA9C,GADF,cAEE,cACE,EAAE,CAAEd,KAAK,CAACY,EADZ,CAEE,IAAI,CAAC,MAFP,CAGE,QAAQ,CAAEP,YAHZ,CAIE,KAAK,CAAEF,OAJT,EAFF,GADF,cAUE,oCACE,eACE,IAAI,CAAC,QADP,CAEE,OAAO,CAAE,kBAAM,CACbD,YAAY,CAAC,KAAD,CAAZ,CACD,CAJH,oBADF,cASE,eAAQ,IAAI,CAAC,QAAb,kBATF,GAVF,GADF,CAwBA,GAAMa,CAAAA,YAAY,cAChB,oCACE,oCACE,cACE,IAAI,CAAC,UADP,CAEE,EAAE,CAAC,QAFL,CAGE,cAAc,CAAEf,KAAK,CAACgB,SAHxB,CAIE,QAAQ,CAAE,mBAAM,CACdhB,KAAK,CAACiB,kBAAN,CAAyBjB,KAAK,CAACY,EAA/B,EACD,CANH,EADF,cASE,cAAO,OAAO,CAAC,QAAf,UAAyBZ,KAAK,CAACc,IAA/B,EATF,GADF,cAYE,oCACE,eACE,EAAE,CAAC,MADL,CAEE,OAAO,CAAE,kBAAM,CACbZ,YAAY,CAAC,IAAD,CAAZ,CACD,CAJH,uBADF,cASE,eACE,EAAE,CAAC,QADL,CAEE,OAAO,CAAE,kBAAM,CACbF,KAAK,CAACkB,UAAN,CAAiBlB,KAAK,CAACY,EAAvB,EACD,CAJH,yBATF,GAZF,GADF,CAiCA,mBAAO,oBAAKX,SAAS,CAAGY,YAAH,CAAkBE,YAAhC,EAAP,CACD,CA1EM","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport const Todo = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [newName, setNewName] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName(\"\");\r\n    setIsEditing(false);\r\n  };\r\n\r\n  // const edit = () => {};\r\n  const editTemplate = (\r\n    <form action=\"#\" onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor={props.id}>New name for {props.name}</label>\r\n        <input\r\n          id={props.id}\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          value={newName}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setIsEditing(false);\r\n          }}\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Save</button>\r\n      </div>\r\n    </form>\r\n  );\r\n  const viewTemplate = (\r\n    <div>\r\n      <div>\r\n        <input\r\n          type=\"checkBox\"\r\n          id=\"status\"\r\n          defaultChecked={props.completed}\r\n          onChange={() => {\r\n            props.toggleTaskComplete(props.id);\r\n          }}\r\n        />\r\n        <label htmlFor=\"status\">{props.name}</label>\r\n      </div>\r\n      <div>\r\n        <button\r\n          id=\"edit\"\r\n          onClick={() => {\r\n            setIsEditing(true);\r\n          }}\r\n        >\r\n          Edit Task\r\n        </button>\r\n        <button\r\n          id=\"remove\"\r\n          onClick={() => {\r\n            props.deleteTask(props.id);\r\n          }}\r\n        >\r\n          Remove Task\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n  return <li>{isEditing ? editTemplate : viewTemplate}</li>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}