{"ast":null,"code":"import _objectSpread from \"C:/Users/siddh/Desktop/todo-list-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/siddh/Desktop/todo-list-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\siddh\\\\Desktop\\\\todo-list-forked\\\\src\\\\TodoMatic.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Form } from \"./Form\";\nimport { Todo } from \"./Todo\";\nimport { FilterButton } from \"./FilterButton\";\nimport classes from \"./todoMatic.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Filters = {\n  All: function All() {\n    return true;\n  },\n  Active: function Active(task) {\n    return !task.completed;\n  },\n  Completed: function Completed(task) {\n    return task.completed;\n  }\n}; // const FilterNames = Object.keys(Filters);\n\nvar FilterNames = [];\nexport var TodoMatic = function TodoMatic() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tasks = _useState2[0],\n      setTasks = _useState2[1];\n\n  var _useState3 = useState(\"All\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filter = _useState4[0],\n      setFilter = _useState4[1]; // const ul = document.getElementsByTagName(\"ul\");\n  // let tasks = [];\n  // useEffect(() => {\n  //   viewTodo();\n  // }, []);\n  // const viewTodo = () => {\n  //   if (localStorage.getItem(\"tasks\"))\n  //     setTodoList(JSON.parse(localStorage.getItem(\"tasks\")));\n  // };\n  // const stampTodo = () => {};\n  // const add = (e) => {\n  //   if (e != null) {\n  //     e.preventDefault();\n  //     if (todo == \"\") {\n  //       alert(\"Enter Task\");\n  //       return;\n  //     }\n  //   }\n  //   if (localStorage.getItem(\"tasks\")) {\n  //     tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n  //   }\n  //   tasks.push(todo);\n  //   // console.log(JSON.stringify(tasks));\n  //   localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  //   setTodo(\"\");\n  //   setTodoList(tasks);\n  // };\n  // const remove = (tods) => {\n  //   todoList.splice(todoList.indexOf(tods), 1);\n  //   localStorage.setItem(\"tasks\", JSON.stringify(todoList));\n  // };\n  // const edit = (tods) => {\n  //   remove(tods);\n  //   setTodo(tods);\n  //   add();\n  // };\n  // const show = () => {};\n  // ---------------------------------------------\n\n\n  var addTask = function addTask(name) {\n    var newTask = {\n      name: name,\n      id: \"todo\" + Math.random() * 1000,\n      completed: false\n    };\n    var lsGet = localStorage.getItem(\"tasks\");\n    var tList = lsGet ? JSON.parse(lsGet) : [];\n    tList.push(newTask);\n    localStorage.setItem(\"tasks\", JSON.stringify(tList));\n    setTasks(tList);\n  };\n\n  var toggleTaskComplete = function toggleTaskComplete(id) {\n    var updatedTasks = JSON.parse(localStorage.getItem(\"tasks\")).map(function (task) {\n      if (task.id === id) {\n        return _objectSpread(_objectSpread({}, task), {}, {\n          completed: !task.completed\n        });\n      }\n\n      return task;\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n    setTasks(updatedTasks);\n  };\n\n  var deleteTask = function deleteTask(id) {\n    var remainingTasks = JSON.parse(localStorage.getItem(\"tasks\")).filter(function (task) {\n      return id !== task.id;\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(remainingTasks));\n    setTasks(remainingTasks);\n  };\n\n  var editTask = function editTask(id, newName) {\n    var editedTasks = JSON.parse(localStorage.getItem(\"tasks\")).map(function (task) {\n      if (id === task.id) return _objectSpread(_objectSpread({}, task), {}, {\n        name: newName\n      });\n      return task;\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(editedTasks));\n    setTasks(editedTasks);\n  };\n\n  var FilterList = FilterNames.map(function (name) {\n    return /*#__PURE__*/_jsxDEV(FilterButton, {\n      name: name,\n      setFilter: setFilter,\n      filter: filter\n    }, name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, _this);\n  });\n  var taskList = localStorage.getItem(\"tasks\") ? JSON.parse(localStorage.getItem(\"tasks\")).filter(Filters[filter]).map(function (task) {\n    return /*#__PURE__*/_jsxDEV(Todo, {\n      name: task.name,\n      id: task.id,\n      completed: task.completed,\n      toggleTaskComplete: toggleTaskComplete,\n      deleteTask: deleteTask,\n      editTask: editTask\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }, _this);\n  }) : [];\n  var headingNoun = taskList.length > 1 ? \"tasks\" : \"task\";\n  var heading = \"\".concat(taskList.length, \" \").concat(headingNoun);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: classes.mainContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: classes.mainHeading,\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: classes.secondaryContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.btnBox,\n        children: FilterList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: classes.secondaryHeading,\n        children: heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: classes.list,\n        children: taskList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TodoMatic, \"EeZuGOM5z5o7WHkJMnH9Om8aBlo=\");\n\n_c = TodoMatic;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoMatic\");","map":{"version":3,"sources":["C:/Users/siddh/Desktop/todo-list-forked/src/TodoMatic.jsx"],"names":["useState","useEffect","Form","Todo","FilterButton","classes","Filters","All","Active","task","completed","Completed","FilterNames","TodoMatic","tasks","setTasks","filter","setFilter","addTask","name","newTask","id","Math","random","lsGet","localStorage","getItem","tList","JSON","parse","push","setItem","stringify","toggleTaskComplete","updatedTasks","map","deleteTask","remainingTasks","editTask","newName","editedTasks","FilterList","taskList","headingNoun","length","heading","mainContainer","mainHeading","secondaryContainer","btnBox","secondaryHeading","list"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Form } from \"./Form\";\r\nimport { Todo } from \"./Todo\";\r\nimport { FilterButton } from \"./FilterButton\";\r\nimport classes from \"./todoMatic.module.css\";\r\n\r\nconst Filters = {\r\n  All: () => true,\r\n  Active: (task) => !task.completed,\r\n  Completed: (task) => task.completed,\r\n};\r\n// const FilterNames = Object.keys(Filters);\r\nconst FilterNames = []\r\nexport const TodoMatic = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [filter, setFilter] = useState(\"All\");\r\n  // const ul = document.getElementsByTagName(\"ul\");\r\n\r\n  // let tasks = [];\r\n\r\n  // useEffect(() => {\r\n  //   viewTodo();\r\n  // }, []);\r\n\r\n  // const viewTodo = () => {\r\n  //   if (localStorage.getItem(\"tasks\"))\r\n  //     setTodoList(JSON.parse(localStorage.getItem(\"tasks\")));\r\n  // };\r\n\r\n  // const stampTodo = () => {};\r\n\r\n  // const add = (e) => {\r\n  //   if (e != null) {\r\n  //     e.preventDefault();\r\n\r\n  //     if (todo == \"\") {\r\n  //       alert(\"Enter Task\");\r\n  //       return;\r\n  //     }\r\n  //   }\r\n\r\n  //   if (localStorage.getItem(\"tasks\")) {\r\n  //     tasks = JSON.parse(localStorage.getItem(\"tasks\"));\r\n  //   }\r\n\r\n  //   tasks.push(todo);\r\n  //   // console.log(JSON.stringify(tasks));\r\n  //   localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n\r\n  //   setTodo(\"\");\r\n  //   setTodoList(tasks);\r\n  // };\r\n\r\n  // const remove = (tods) => {\r\n  //   todoList.splice(todoList.indexOf(tods), 1);\r\n\r\n  //   localStorage.setItem(\"tasks\", JSON.stringify(todoList));\r\n  // };\r\n\r\n  // const edit = (tods) => {\r\n  //   remove(tods);\r\n  //   setTodo(tods);\r\n  //   add();\r\n  // };\r\n\r\n  // const show = () => {};\r\n\r\n  // ---------------------------------------------\r\n\r\n  const addTask = (name) => {\r\n    const newTask = {\r\n      name: name,\r\n      id: \"todo\" + Math.random() * 1000,\r\n      completed: false,\r\n    };\r\n\r\n    const lsGet = localStorage.getItem(\"tasks\");\r\n    const tList = lsGet ? JSON.parse(lsGet) : [];\r\n\r\n    tList.push(newTask);\r\n\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tList));\r\n\r\n    setTasks(tList);\r\n  };\r\n\r\n  const toggleTaskComplete = (id) => {\r\n    const updatedTasks = JSON.parse(localStorage.getItem(\"tasks\")).map(\r\n      (task) => {\r\n        if (task.id === id) {\r\n          return { ...task, completed: !task.completed };\r\n        }\r\n        return task;\r\n      }\r\n    );\r\n    localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    const remainingTasks = JSON.parse(localStorage.getItem(\"tasks\")).filter(\r\n      (task) => id !== task.id\r\n    );\r\n    localStorage.setItem(\"tasks\", JSON.stringify(remainingTasks));\r\n\r\n    setTasks(remainingTasks);\r\n  };\r\n\r\n  const editTask = (id, newName) => {\r\n    const editedTasks = JSON.parse(localStorage.getItem(\"tasks\")).map(\r\n      (task) => {\r\n        if (id === task.id) return { ...task, name: newName };\r\n        return task;\r\n      }\r\n    );\r\n    localStorage.setItem(\"tasks\", JSON.stringify(editedTasks));\r\n    setTasks(editedTasks);\r\n  };\r\n\r\n  const FilterList = FilterNames.map((name) => (\r\n    <FilterButton name={name} key={name} setFilter={setFilter} filter={filter}/>\r\n  ));\r\n\r\n  const taskList = localStorage.getItem(\"tasks\")\r\n    ? JSON.parse(localStorage.getItem(\"tasks\"))\r\n        .filter(Filters[filter])\r\n        .map((task) => (\r\n          <Todo\r\n            name={task.name}\r\n            key={task.id}\r\n            id={task.id}\r\n            completed={task.completed}\r\n            toggleTaskComplete={toggleTaskComplete}\r\n            deleteTask={deleteTask}\r\n            editTask={editTask}\r\n          />\r\n        ))\r\n    : [];\r\n\r\n  const headingNoun = taskList.length > 1 ? \"tasks\" : \"task\";\r\n  const heading = `${taskList.length} ${headingNoun}`;\r\n\r\n  return (\r\n    <div id={classes.mainContainer}>\r\n      <h1 id={classes.mainHeading}>Todo List</h1>\r\n      <Form addTask={addTask} />\r\n      <div id={classes.secondaryContainer}>\r\n        <div className={classes.btnBox}>{FilterList}</div>\r\n        <h2 className={classes.secondaryHeading}>{heading}</h2>\r\n        <ul id={classes.list}>{taskList}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}