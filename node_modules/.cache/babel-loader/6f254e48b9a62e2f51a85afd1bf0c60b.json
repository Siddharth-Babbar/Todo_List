{"ast":null,"code":"import _objectSpread from\"C:/Users/siddh/Desktop/todo-list-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/siddh/Desktop/todo-list-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from\"react\";import{Form}from\"./Form\";import{Todo}from\"./Todo\";import{FilterButton}from\"./FilterButton\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Filters={All:function All(){return true;},Active:function Active(task){return!task.completed;},Completed:function Completed(task){return task.completed;}};var FilterNames=Object.keys(Filters);export var TodoMatic=function TodoMatic(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var _useState3=useState(\"All\"),_useState4=_slicedToArray(_useState3,2),filter=_useState4[0],setFilter=_useState4[1];// const ul = document.getElementsByTagName(\"ul\");\n// let tasks = [];\n// useEffect(() => {\n//   viewTodo();\n// }, []);\n// const viewTodo = () => {\n//   if (localStorage.getItem(\"tasks\"))\n//     setTodoList(JSON.parse(localStorage.getItem(\"tasks\")));\n// };\n// const stampTodo = () => {};\n// const add = (e) => {\n//   if (e != null) {\n//     e.preventDefault();\n//     if (todo == \"\") {\n//       alert(\"Enter Task\");\n//       return;\n//     }\n//   }\n//   if (localStorage.getItem(\"tasks\")) {\n//     tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n//   }\n//   tasks.push(todo);\n//   // console.log(JSON.stringify(tasks));\n//   localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n//   setTodo(\"\");\n//   setTodoList(tasks);\n// };\n// const remove = (tods) => {\n//   todoList.splice(todoList.indexOf(tods), 1);\n//   localStorage.setItem(\"tasks\", JSON.stringify(todoList));\n// };\n// const edit = (tods) => {\n//   remove(tods);\n//   setTodo(tods);\n//   add();\n// };\n// const show = () => {};\n// ---------------------------------------------\nvar addTask=function addTask(name){var newTask={name:name,id:\"todo\"+Math.random()*1000,completed:false};var lsGet=localStorage.getItem(\"tasks\");var tList=lsGet?JSON.parse(lsGet):[];tList.push(newTask);localStorage.setItem(\"tasks\",JSON.stringify(tList));setTasks(tList);};var toggleTaskComplete=function toggleTaskComplete(id){var updatedTasks=JSON.parse(localStorage.getItem(\"tasks\")).map(function(task){if(task.id===id){return _objectSpread(_objectSpread({},task),{},{completed:!task.completed});}return task;});localStorage.setItem(\"tasks\",JSON.stringify(updatedTasks));setTasks(updatedTasks);};var deleteTask=function deleteTask(id){var remainingTasks=JSON.parse(localStorage.getItem(\"tasks\")).filter(function(task){return id!==task.id;});localStorage.setItem(\"tasks\",JSON.stringify(remainingTasks));setTasks(remainingTasks);};var editTask=function editTask(id,newName){var editedTasks=JSON.parse(localStorage.getItem(\"tasks\")).map(function(task){if(id===task.id)return _objectSpread(_objectSpread({},task),{},{name:newName});return task;});localStorage.setItem(\"tasks\",JSON.stringify(editedTasks));setTasks(editedTasks);};var FilterList=FilterNames.map(function(name){return/*#__PURE__*/_jsx(FilterButton,{name:name,setFilter:setFilter},name);});var taskList=localStorage.getItem(\"tasks\")?JSON.parse(localStorage.getItem(\"tasks\")).filter(Filters[filter]).map(function(task){return/*#__PURE__*/_jsx(Todo,{name:task.name,id:task.id,completed:task.completed,toggleTaskComplete:toggleTaskComplete,deleteTask:deleteTask,editTask:editTask},task.id);}):[];var headingNoun=taskList.length>1?\"tasks\":\"task\";var heading=\"\".concat(taskList.length,\" \").concat(headingNoun);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Form,{addTask:addTask})}),/*#__PURE__*/_jsxs(\"div\",{children:[FilterList,/*#__PURE__*/_jsx(\"h2\",{children:heading}),/*#__PURE__*/_jsx(\"ul\",{children:taskList})]})]});};","map":{"version":3,"sources":["C:/Users/siddh/Desktop/todo-list-forked/src/TodoMatic.jsx"],"names":["useState","useEffect","Form","Todo","FilterButton","Filters","All","Active","task","completed","Completed","FilterNames","Object","keys","TodoMatic","tasks","setTasks","filter","setFilter","addTask","name","newTask","id","Math","random","lsGet","localStorage","getItem","tList","JSON","parse","push","setItem","stringify","toggleTaskComplete","updatedTasks","map","deleteTask","remainingTasks","editTask","newName","editedTasks","FilterList","taskList","headingNoun","length","heading"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Form } from \"./Form\";\r\nimport { Todo } from \"./Todo\";\r\nimport { FilterButton } from \"./FilterButton\";\r\n\r\nconst Filters = {\r\n  All: () => true,\r\n  Active: (task) => !task.completed,\r\n  Completed: (task) => task.completed\r\n};\r\nconst FilterNames = Object.keys(Filters);\r\nexport const TodoMatic = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [filter, setFilter] = useState(\"All\");\r\n  // const ul = document.getElementsByTagName(\"ul\");\r\n\r\n  // let tasks = [];\r\n\r\n  // useEffect(() => {\r\n  //   viewTodo();\r\n  // }, []);\r\n\r\n  // const viewTodo = () => {\r\n  //   if (localStorage.getItem(\"tasks\"))\r\n  //     setTodoList(JSON.parse(localStorage.getItem(\"tasks\")));\r\n  // };\r\n\r\n  // const stampTodo = () => {};\r\n\r\n  // const add = (e) => {\r\n  //   if (e != null) {\r\n  //     e.preventDefault();\r\n\r\n  //     if (todo == \"\") {\r\n  //       alert(\"Enter Task\");\r\n  //       return;\r\n  //     }\r\n  //   }\r\n\r\n  //   if (localStorage.getItem(\"tasks\")) {\r\n  //     tasks = JSON.parse(localStorage.getItem(\"tasks\"));\r\n  //   }\r\n\r\n  //   tasks.push(todo);\r\n  //   // console.log(JSON.stringify(tasks));\r\n  //   localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n\r\n  //   setTodo(\"\");\r\n  //   setTodoList(tasks);\r\n  // };\r\n\r\n  // const remove = (tods) => {\r\n  //   todoList.splice(todoList.indexOf(tods), 1);\r\n\r\n  //   localStorage.setItem(\"tasks\", JSON.stringify(todoList));\r\n  // };\r\n\r\n  // const edit = (tods) => {\r\n  //   remove(tods);\r\n  //   setTodo(tods);\r\n  //   add();\r\n  // };\r\n\r\n  // const show = () => {};\r\n\r\n  // ---------------------------------------------\r\n\r\n  const addTask = (name) => {\r\n    const newTask = {\r\n      name: name,\r\n      id: \"todo\" + Math.random() * 1000,\r\n      completed: false\r\n    };\r\n\r\n    const lsGet = localStorage.getItem(\"tasks\");\r\n    const tList = lsGet ? JSON.parse(lsGet) : [];\r\n\r\n    tList.push(newTask);\r\n\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tList));\r\n\r\n    setTasks(tList);\r\n  };\r\n\r\n  const toggleTaskComplete = (id) => {\r\n    const updatedTasks = JSON.parse(localStorage.getItem(\"tasks\")).map(\r\n      (task) => {\r\n        if (task.id === id) {\r\n          return { ...task, completed: !task.completed };\r\n        }\r\n        return task;\r\n      }\r\n    );\r\n    localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    const remainingTasks = JSON.parse(localStorage.getItem(\"tasks\")).filter(\r\n      (task) => id !== task.id\r\n    );\r\n    localStorage.setItem(\"tasks\", JSON.stringify(remainingTasks));\r\n\r\n    setTasks(remainingTasks);\r\n  };\r\n\r\n  const editTask = (id, newName) => {\r\n    const editedTasks = JSON.parse(localStorage.getItem(\"tasks\")).map(\r\n      (task) => {\r\n        if (id === task.id) return { ...task, name: newName };\r\n        return task;\r\n      }\r\n    );\r\n    localStorage.setItem(\"tasks\", JSON.stringify(editedTasks));\r\n    setTasks(editedTasks);\r\n  };\r\n\r\n  const FilterList = FilterNames.map((name) => (\r\n    <FilterButton name={name} key={name} setFilter={setFilter} />\r\n  ));\r\n\r\n  const taskList = localStorage.getItem(\"tasks\")\r\n    ? JSON.parse(localStorage.getItem(\"tasks\"))\r\n        .filter(Filters[filter])\r\n        .map((task) => (\r\n          <Todo\r\n            name={task.name}\r\n            key={task.id}\r\n            id={task.id}\r\n            completed={task.completed}\r\n            toggleTaskComplete={toggleTaskComplete}\r\n            deleteTask={deleteTask}\r\n            editTask={editTask}\r\n          />\r\n        ))\r\n    : [];\r\n\r\n  const headingNoun = taskList.length > 1 ? \"tasks\" : \"task\";\r\n  const heading = `${taskList.length} ${headingNoun}`;\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Form addTask={addTask} />\r\n      </div>\r\n      <div>\r\n        {FilterList}\r\n        <h2>{heading}</h2>\r\n        <ul>{taskList}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}