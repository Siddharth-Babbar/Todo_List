{"ast":null,"code":"import _slicedToArray from \"C:/Users/siddh/Desktop/todo-list-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\siddh\\\\Desktop\\\\todo-list-forked\\\\src\\\\Todo.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport classes from \"./todo.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Todo = function Todo(props) {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEditing = _useState2[0],\n      setIsEditing = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newName = _useState4[0],\n      setNewName = _useState4[1];\n\n  var handleChange = function handleChange(e) {\n    setNewName(e.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setIsEditing(false);\n  }; // const edit = () => {};\n\n\n  var editTemplate = /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"#\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: props.id,\n        children: [\"New name for \", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        type: \"text\",\n        onChange: handleChange,\n        value: newName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          setIsEditing(false);\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, _this);\n\n  var viewTemplate = /*#__PURE__*/_jsxDEV(\"div\", {\n    id: classes.todoContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: classes.todoContent,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkBox\",\n        defaultChecked: props.completed,\n        onChange: function onChange() {\n          props.toggleTaskComplete(props.id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status\",\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.btnBox,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"edit\",\n        onClick: function onClick() {\n          setIsEditing(true);\n        },\n        className: classes.Btn,\n        children: \"Edit Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"remove\",\n        onClick: function onClick() {\n          props.deleteTask(props.id);\n        },\n        children: \"Remove Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, _this);\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.listItem,\n    children: isEditing ? editTemplate : viewTemplate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Todo, \"tnTsKq0Ha9f+O/79LIBGpjsmyrQ=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/siddh/Desktop/todo-list-forked/src/Todo.jsx"],"names":["useState","classes","Todo","props","isEditing","setIsEditing","newName","setNewName","handleChange","e","target","value","handleSubmit","preventDefault","editTask","id","editTemplate","name","viewTemplate","todoContainer","todoContent","completed","toggleTaskComplete","btnBox","Btn","deleteTask","listItem"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAAA;;AAC7B,kBAAkCH,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOI,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA8BL,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOM,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAC1BF,IAAAA,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACH,CAAD,EAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AACAV,IAAAA,KAAK,CAACW,QAAN,CAAeX,KAAK,CAACY,EAArB,EAAyBT,OAAzB;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GALD,CAR6B,CAe7B;;;AACA,MAAMW,YAAY,gBAChB;AAAM,IAAA,MAAM,EAAC,GAAb;AAAiB,IAAA,QAAQ,EAAEJ,YAA3B;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAET,KAAK,CAACY,EAAtB;AAAA,oCAAwCZ,KAAK,CAACc,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AACE,QAAA,EAAE,EAAEd,KAAK,CAACY,EADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAEP,YAHZ;AAIE,QAAA,KAAK,EAAEF;AAJT;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAUE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE,mBAAM;AACbD,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eASE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF;AAAA;AAAA;AAAA;AAAA;AAAA,aAVF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;;AAwBA,MAAMa,YAAY,gBAChB;AAAK,IAAA,EAAE,EAAEjB,OAAO,CAACkB,aAAjB;AAAA,4BACE;AAAK,MAAA,EAAE,EAAElB,OAAO,CAACmB,WAAjB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,cAAc,EAAEjB,KAAK,CAACkB,SAFxB;AAGE,QAAA,QAAQ,EAAE,oBAAM;AACdlB,UAAAA,KAAK,CAACmB,kBAAN,CAAyBnB,KAAK,CAACY,EAA/B;AACD;AALH;AAAA;AAAA;AAAA;AAAA,eADF,eAQE;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA,kBAAyBZ,KAAK,CAACc;AAA/B;AAAA;AAAA;AAAA;AAAA,eARF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAWE;AAAK,MAAA,SAAS,EAAEhB,OAAO,CAACsB,MAAxB;AAAA,8BACE;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,OAAO,EAAE,mBAAM;AACblB,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,SAJH;AAKE,QAAA,SAAS,EAAEJ,OAAO,CAACuB,GALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAUE;AACE,QAAA,EAAE,EAAC,QADL;AAEE,QAAA,OAAO,EAAE,mBAAM;AACbrB,UAAAA,KAAK,CAACsB,UAAN,CAAiBtB,KAAK,CAACY,EAAvB;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVF;AAAA;AAAA;AAAA;AAAA;AAAA,aAXF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;;AAiCA,sBACE;AAAI,IAAA,SAAS,EAAEd,OAAO,CAACyB,QAAvB;AAAA,cACGtB,SAAS,GAAGY,YAAH,GAAkBE;AAD9B;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CA9EM;;GAAMhB,I;;KAAAA,I","sourcesContent":["import { useState } from \"react\";\r\nimport classes from \"./todo.module.css\";\r\n\r\nexport const Todo = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [newName, setNewName] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName(\"\");\r\n    setIsEditing(false);\r\n  };\r\n\r\n  // const edit = () => {};\r\n  const editTemplate = (\r\n    <form action=\"#\" onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor={props.id}>New name for {props.name}</label>\r\n        <input\r\n          id={props.id}\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          value={newName}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setIsEditing(false);\r\n          }}\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Save</button>\r\n      </div>\r\n    </form>\r\n  );\r\n  const viewTemplate = (\r\n    <div id={classes.todoContainer}>\r\n      <div id={classes.todoContent}>\r\n        <input\r\n          type=\"checkBox\"\r\n          defaultChecked={props.completed}\r\n          onChange={() => {\r\n            props.toggleTaskComplete(props.id);\r\n          }}\r\n        />\r\n        <label htmlFor=\"status\">{props.name}</label>\r\n      </div>\r\n      <div className={classes.btnBox}>\r\n        <button\r\n          id=\"edit\"\r\n          onClick={() => {\r\n            setIsEditing(true);\r\n          }}\r\n          className={classes.Btn}\r\n        >\r\n          Edit Task\r\n        </button>\r\n        <button\r\n          id=\"remove\"\r\n          onClick={() => {\r\n            props.deleteTask(props.id);\r\n          }}\r\n        >\r\n          Remove Task\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <li className={classes.listItem}>\r\n      {isEditing ? editTemplate : viewTemplate}\r\n    </li>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}